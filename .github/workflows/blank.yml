# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Aqua Security Trivy
        # You may pin to the exact commit or the version.
        # uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54
        uses: aquasecurity/trivy-action@0.11.2
        with:
         # Scan type to use for scanning vulnerability
         scan-type: # optional, default is image
         # image reference(for backward compatibility)
         image-ref: dvpwa.app:latest
         # reference of tar file to scan
         input: # optional, default is 
         # Scan reference
         scan-ref: # optional, default is .
         # exit code when vulnerabilities were found
         exit-code: # optional
         # ignore unfixed vulnerabilities
         ignore-unfixed: # optional, default is false
         # comma-separated list of vulnerability types (os,library)
         vuln-type: # optional, default is os,library
         # severities of vulnerabilities to be displayed
         severity: # optional, default is UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
         # output format (table, json, template)
         format: # optional, default is table
         # use an existing template for rendering output (@/contrib/gitlab.tpl, @/contrib/junit.tpl, @/contrib/html.tpl)
         template: # optional, default is 
         # writes results to a file with the specified file name
         output: # optional, default is 
         # comma separated list of directories where traversal is skipped
         skip-dirs: # optional, default is 
         # comma separated list of files to be skipped
         skip-files: # optional, default is 
         # specify where the cache is stored
         cache-dir: # optional, default is 
         # timeout (default 5m0s)
         timeout: # optional, default is 
         # filter vulnerabilities with OPA rego language
         ignore-policy: # optional, default is 
         # hide progress output
         hide-progress: # optional
         # output all packages regardless of vulnerability
         list-all-pkgs: # optional, default is false
         # comma-separated list of what security issues to detect
         scanners: # optional, default is 
         # comma-separated list of relative paths in repository to one or more .trivyignore files
         trivyignores: # optional, default is 
         # input artifact type (image, fs, repo, archive) for SBOM generation
         artifact-type: # optional
        # GitHub Personal Access Token (PAT) for submitting SBOM to GitHub Dependency Snapshot API
    github-pat: # optional
    # path to trivy.yaml config
    trivy-config: # optional
    # limit severities for SARIF format
    limit-severities-for-sarif: # optional
